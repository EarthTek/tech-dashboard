{"version":3,"sources":["Auth/react-auth0-spa.js","Header/Header.js","Store/Reducer.js","Store/Store.js","Table/Table.js","Issues/Repositories.js","Issues/Issues.js","Devices/DataParser.js","Devices/hologramConstants.js","Devices/Devices.js","Devices/Device.js","Forms/KoboFormAuth.js","Forms/FormsLoadingSkeleton.js","Forms/Forms.js","Landing/Landing.js","utils/private-routes.js","App.js","serviceWorker.js","utils/history.js","index.js"],"names":["DEFAULT_REDIRECT_CALLBACK","redirectURI","window","location","pathname","history","replaceState","document","title","Auth0Context","React","createContext","useAuth0","useContext","useStyles","makeStyles","theme","root","display","flexGrow","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","content","contentShift","Header","props","classes","useTheme","useState","open","setOpen","anchorEl","setAnchorEl","profileMenuOpen","Boolean","isAuthenticated","loginWithRedirect","logout","handleProfileMenuClose","className","AppBar","position","clsx","color","Toolbar","IconButton","aria-label","onClick","edge","Typography","variant","noWrap","setDarkTheme","isDarkTheme","Brightness4","BrightnessHigh","Lock","aria-controls","aria-haspopup","event","currentTarget","AccountCircle","id","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","Drawer","anchor","paper","direction","ChevronLeft","ChevronRight","Divider","List","ListItem","button","key","component","Link","to","ListItemIcon","ViewList","ListItemText","primary","QuestionAnswer","Radio","Storage","setPsaForms","state","action","psaForms","data","setPsassgForms","psassgForms","setDevicesInfo","devices","updateAllRepos","repositories","updateHelloWorld","helloText","setSiteInfo","site_information","setOneSiteInfo","push","checkAuth","username","password","loggedIn","Reducer","type","initialState","Context","Store","children","useReducer","dispatch","Provider","value","tableIcons","Add","forwardRef","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","TableComponent","tableState","setTableState","useEffect","console","log","length","fetchRecords","then","apiURL","a","async","Axios","get","response","style","maxWidth","isLoading","editable","isEditable","rowData","isDeletable","onRowAdd","newData","icons","columns","field","options","exportButton","exportFileName","addRowPosition","exportAllData","pageSize","pageSizeOptions","groupRowSeparator","grouping","card","minWidth","bullet","margin","transform","fontSize","pos","marginBottom","CardBuilder","repo","Card","CardHeader","avatar","Avatar","src","owner","avatar_url","alt","login","name","CardContent","open_issues_count","CardActions","Button","size","href","url","target","RepositoriesComponent","repos","map","index","ReposComponent","success","bl","Promise","resolve","reject","getAllRepoNames","height","Repositories","deadDeviceBG","red","activeDeviceBG","green","DataParser","deviceId","setDeviceId","shouldRedirect","setShouldRedirect","device","deviceData","dateStatus","deviceDateStr","today","lastsession","deviceSessionBegin","links","cellular","last_connect_time","moment","tz","format","toString","deviceDay","date","deviceMonth","month","deviceYear","year","now","todayDay","todayMonth","CardActionArea","backgroundColor","disabled","setDeviceState","fontWeight","APIURL","process","APICreds","authBase64","btoa","responseType","headers","Authorization","DevicesComponent","devicesLoadingState","setDevicesLoadingState","devicesData","finalAPIURL","Constants","apiCall","continues","next","devicesFlatData","flat","sort","compare","catch","error","b","bandA","toUpperCase","bandB","comparison","elevation","L","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","flexWrap","overflow","palette","background","gridList","titleBar","icon","DeviceComponent","setDeviceData","flag","latLng","setLatLng","mostRecentData","setMostRecentData","undefined","match","params","latitude","longitude","renderJSON","jdata","JSON","parse","substring","atob","whiteSpace","wordWrap","renderTimestamp","ts","timestamp","renderErrorCode","ecd","errorcode","GridList","cellHeight","GridListTile","Map","center","zoom","zoomControl","TileLayer","attribution","Marker","Popup","GridListTileBar","zIndex","titlePosition","actionIcon","tooltip","ArrowBackIosOutlined","actionPosition","cols","Create","secondary","whencreated","SimCard","imei","Phone","phonenumber","Business","orgid","SimCardTwoTone","imei_sv","Category","NetworkCell","last_network_used","Router","SignalCellularConnectedNoInternet0Bar","whenexpires","row","FastForward","Label","tags","chip","Chip","label","Skeleton","animation","getAllKoboAssets","who","FormsLoadingSkeleton","Forms","isPSALoading","setIsPSALoading","isPSASSGLoading","setIsPSASSGLoading","results","form","deployment__active","deployment__submission_count","LandingComponent","align","gutterBottom","Grid","container","item","Paper","PrivateRoute","Component","path","rest","loading","appState","targetUrl","render","App","main","typography","useNextVariants","fontFamily","setTheme","muiTheme","createMuiTheme","CssBaseline","ThemeProvider","Box","newPaletteType","Landing","exact","hostname","createBrowserHistory","ReactDOM","onRedirectCallback","initOptions","setIsAuthenticated","user","setUser","auth0Client","setAuth0","setLoading","popupOpen","setPopupOpen","createAuth0Client","auth0FromHook","search","includes","handleRedirectCallback","getUser","initAuth0","loginWithPopup","redirect_uri","getIdTokenClaims","getTokenSilently","getTokenWithPopup","domain","config","client_id","clientId","origin","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ee7b5855.chunk.js","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport createAuth0Client from \"@auth0/auth0-spa-js\";\n\nconst DEFAULT_REDIRECT_CALLBACK = () => {\n  let redirectURI = \"\";\n  if (\n    window.location.pathname === \"https://precision-sustainable-ag.github.io\" ||\n    window.location.pathname ===\n      \"https://precision-sustainable-ag.github.io/tech-dashboard\"\n  ) {\n    redirectURI = \"/tech-dashboard\";\n  } else {\n    redirectURI = \"\";\n  }\n  window.history.replaceState(\n    {},\n    document.title,\n    window.location.pathname + redirectURI\n  );\n};\n\nexport const Auth0Context = React.createContext();\nexport const useAuth0 = () => useContext(Auth0Context);\nexport const Auth0Provider = ({\n  children,\n  onRedirectCallback = DEFAULT_REDIRECT_CALLBACK,\n  ...initOptions\n}) => {\n  const [isAuthenticated, setIsAuthenticated] = useState();\n  const [user, setUser] = useState();\n  const [auth0Client, setAuth0] = useState();\n  const [loading, setLoading] = useState(true);\n  const [popupOpen, setPopupOpen] = useState(false);\n\n  useEffect(() => {\n    const initAuth0 = async () => {\n      const auth0FromHook = await createAuth0Client(initOptions);\n      setAuth0(auth0FromHook);\n\n      if (\n        window.location.search.includes(\"code=\") &&\n        window.location.search.includes(\"state=\")\n      ) {\n        const { appState } = await auth0FromHook.handleRedirectCallback();\n        onRedirectCallback(appState);\n      }\n\n      const isAuthenticated = await auth0FromHook.isAuthenticated();\n\n      setIsAuthenticated(isAuthenticated);\n\n      if (isAuthenticated) {\n        const user = await auth0FromHook.getUser();\n        setUser(user);\n      }\n\n      setLoading(false);\n    };\n    initAuth0();\n    // eslint-disable-next-line\n  }, []);\n\n  const loginWithPopup = async (\n    params = {\n      redirect_uri: \"https://precisionsustainableag.org/tech-dashboard\"\n    }\n  ) => {\n    setPopupOpen(true);\n    try {\n      await auth0Client.loginWithPopup(params);\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setPopupOpen(false);\n    }\n    const user = await auth0Client.getUser();\n    setUser(user);\n    setIsAuthenticated(true);\n  };\n\n  const handleRedirectCallback = async () => {\n    setLoading(true);\n    await auth0Client.handleRedirectCallback();\n    const user = await auth0Client.getUser();\n    setLoading(false);\n    setIsAuthenticated(true);\n    setUser(user);\n  };\n  return (\n    <Auth0Context.Provider\n      value={{\n        isAuthenticated,\n        user,\n        loading,\n        popupOpen,\n        loginWithPopup,\n        handleRedirectCallback,\n        getIdTokenClaims: (...p) => auth0Client.getIdTokenClaims(...p),\n        loginWithRedirect: (...p) => auth0Client.loginWithRedirect(...p),\n        getTokenSilently: (...p) => auth0Client.getTokenSilently(...p),\n        getTokenWithPopup: (...p) => auth0Client.getTokenWithPopup(...p),\n        logout: (...p) => auth0Client.logout(...p)\n      }}\n    >\n      {children}\n    </Auth0Context.Provider>\n  );\n};\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\n\nimport {\n  Drawer,\n  CssBaseline,\n  AppBar,\n  Toolbar,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  IconButton,\n  Divider,\n  Typography,\n  Button,\n  Menu,\n  MenuItem\n} from \"@material-ui/core\";\n\nimport { Link } from \"react-router-dom\";\nimport {\n  ChevronRight,\n  ChevronLeft,\n  Radio,\n  Storage,\n  QuestionAnswer,\n  ViewList,\n  AccountCircle,\n  Lock,\n  Brightness4,\n  BrightnessHigh\n} from \"@material-ui/icons\";\nimport { useAuth0 } from \"../Auth/react-auth0-spa\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    flexGrow: 1\n  },\n  title: {\n    flexGrow: 1\n  },\n  appBar: {\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  hide: {\n    display: \"none\"\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth\n  },\n  drawerHeader: {\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar,\n    justifyContent: \"flex-end\"\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    marginLeft: -drawerWidth\n  },\n  contentShift: {\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    marginLeft: 0\n  }\n}));\n\nexport default function Header(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const profileMenuOpen = Boolean(anchorEl);\n\n  const { isAuthenticated, loginWithRedirect, logout } = useAuth0();\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const handleMenu = event => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleProfileMenuClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleLogout = () => {};\n  const toggleThemeDarkness = () => {\n    props.setDarkTheme();\n  };\n  return (\n    <div className={classes.root}>\n      {/* <CssBaseline /> */}\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open\n        })}\n        color=\"primary\"\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, open && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap className={classes.title}>\n            PSA Tech Dashboard\n          </Typography>\n          <IconButton color=\"inherit\" onClick={toggleThemeDarkness}>\n            {props.isDarkTheme ? <Brightness4 /> : <BrightnessHigh />}\n          </IconButton>\n          {!isAuthenticated && (\n            <IconButton color=\"inherit\" onClick={() => loginWithRedirect({})}>\n              <Lock />\n            </IconButton>\n          )}\n\n          {/* {isAuthenticated && <Button onClick={() => logout()}>Log out</Button>} */}\n          {isAuthenticated && (\n            <div>\n              <IconButton\n                aria-label=\"user profile\"\n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                onClick={handleMenu}\n                color=\"inherit\"\n              >\n                <AccountCircle />\n              </IconButton>\n              <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorEl}\n                anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n                keepMounted\n                transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n                open={profileMenuOpen}\n                onClose={handleProfileMenuClose}\n              >\n                <MenuItem onClick={handleProfileMenuClose}>Profile</MenuItem>\n                <MenuItem onClick={() => logout()}>Log Out</MenuItem>\n              </Menu>\n            </div>\n          )}\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === \"ltr\" ? <ChevronLeft /> : <ChevronRight />}\n          </IconButton>\n        </div>\n\n        <Divider />\n        <List>\n          <ListItem button key={\"Home\"} component={Link} to=\"/\">\n            <ListItemIcon>\n              <ViewList />\n            </ListItemIcon>\n            <ListItemText primary={\"Quick Links\"} />\n          </ListItem>\n          <ListItem button key={\"All Data\"} component={Link} to=\"/table\">\n            <ListItemIcon>\n              <ViewList />\n            </ListItemIcon>\n            <ListItemText primary={\"All Data\"} />\n          </ListItem>\n\n          <ListItem button key={\"Issues\"} component={Link} to=\"/issues\">\n            <ListItemIcon>\n              <QuestionAnswer />\n            </ListItemIcon>\n            <ListItemText primary={\"Issues\"} />\n          </ListItem>\n\n          <ListItem button key=\"Devices\" component={Link} to=\"/devices\">\n            <ListItemIcon>\n              <Radio />\n            </ListItemIcon>\n            <ListItemText primary=\"Devices\" />\n          </ListItem>\n          <ListItem button key=\"Forms\" component={Link} to=\"/kobo-forms\">\n            <ListItemIcon>\n              <Storage />\n            </ListItemIcon>\n            <ListItemText primary=\"Forms\" />\n          </ListItem>\n        </List>\n      </Drawer>\n    </div>\n  );\n}\n","const Reducer = (state, action) => \n{\n  switch (action.type) \n  {\n    case \"UPDATE_HELLO_WORLD\":\n      return updateHelloWorld(state, action);\n\n    case \"SET_SITE_INFO\":\n      return setSiteInfo(state, action);\n    case \"ADD_ONE_SITE_INFO_TO_STATE\":\n      return setOneSiteInfo(state, action);\n    case \"UPDATE_ALL_REPOS\":\n      return updateAllRepos(state, action);\n    case \"SET_DEVICES_INFO\":\n      return setDevicesInfo(state, action);\n    case \"SET_PSA_FORMS\": return setPsaForms(state, action);\n    case \"SET_PSASSG_FORMS\": return setPsassgForms(state, action);\n    case \"CHECK_USERNAME_PASSWORD\": return checkAuth(state, action);\n    default:\n      return { ...state };\n  }\n};\n\nconst setPsaForms = (state, action) => {\n  return {\n    ...state, psaForms: action.data\n  }\n};\n\nconst setPsassgForms = (state, action) => {\n  return {\n    ...state, psassgForms: action.data\n  }\n}\n\nconst setDevicesInfo = (state, action) => \n{\n  return {\n    ...state,\n    devices: action.data\n  };\n};\n\nconst updateAllRepos = (state, action) => \n{\n  return {\n    ...state,\n    repositories: action.data\n  };\n};\nconst updateHelloWorld = (state, action) => {\n  return { ...state, helloText: \"hi world\" };\n};\n\nconst setSiteInfo = (state, action) => {\n  return { ...state, site_information: action.data };\n};\n\nconst setOneSiteInfo = (state, action) => {\n  return {\n    ...state,\n    site_information: state.site_information.push(action.data)\n  };\n};\n\nconst checkAuth = (state, action) => {\n\n  if(action.data.username === 'hey' && action.data.password === 'hey') return {...state, loggedIn: true}\n  else return {...state, loggedIn: false}\n\n};\n\nexport default Reducer;\n","import React, { createContext, useReducer } from \"react\";\nimport Reducer from \"./Reducer\";\n\nconst initialState = {\n  loggedIn: false,\n  site_information: [],\n  repositories: [],\n  devices: [],\n  psaForms:[],\n  psassgForms: []\n};\n\nconst Store = ({ children }) => {\n  const [state, dispatch] = useReducer(Reducer, initialState);\n  return (\n    <Context.Provider value={[state, dispatch]}>{children}</Context.Provider>\n  );\n};\nexport const Context = createContext(initialState);\nexport default Store;\n","import React, { useEffect, useContext, useState } from \"react\";\nimport { forwardRef } from \"react\";\nimport MaterialTable from \"material-table\";\nimport AddBox from \"@material-ui/icons/AddBox\";\nimport ArrowDownward from \"@material-ui/icons/ArrowDownward\";\nimport Check from \"@material-ui/icons/Check\";\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\nimport Clear from \"@material-ui/icons/Clear\";\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport FilterList from \"@material-ui/icons/FilterList\";\nimport FirstPage from \"@material-ui/icons/FirstPage\";\nimport LastPage from \"@material-ui/icons/LastPage\";\nimport Remove from \"@material-ui/icons/Remove\";\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\nimport Search from \"@material-ui/icons/Search\";\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\nimport { Context } from \"../Store/Store\";\nimport Axios from \"axios\";\n// import ReactLoading from \"react-loading\";\n// import AddIcon from \"@material-ui/icons/Add\";\n\n// import { Fab } from \"@material-ui/core\";\n\nconst tableIcons = {\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n  DetailPanel: forwardRef((props, ref) => (\n    <ChevronRight {...props} ref={ref} />\n  )),\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  PreviousPage: forwardRef((props, ref) => (\n    <ChevronLeft {...props} ref={ref} />\n  )),\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n  SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n};\n\nconst TableComponent = () => {\n  const [state, dispatch] = useContext(Context);\n  const [tableState, setTableState] = useState(true);\n  useEffect(() => {\n    console.log(\"hello from table\");\n    if (state.site_information.length === 0) {\n      fetchRecords(`http://13.72.51.225/api/?tablerecords=all`).then(() => {\n        setTableState(false);\n      });\n    } else {\n      setTableState(false);\n    }\n  }, [tableState]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const fetchRecords = async apiURL => {\n    await Axios.get(apiURL).then(response => {\n      let data = response.data;\n      dispatch({\n        type: \"SET_SITE_INFO\",\n        data: data\n      });\n      //   console.log(response);\n    });\n  };\n\n  const setTableRecordFormat = () => {\n    console.log(\"inside table record function\", state);\n    state.site_information.map((site, index) => {\n      console.log(\"site\", site);\n      let grower = site.last_name;\n      let county = site.county;\n      let email = site.email;\n      let address = site.address;\n      let latlng = `${site.latitude}, ${site.longitude}`;\n      let notes = site.notes;\n      let obj = {\n        grower: grower,\n        county: county,\n        email: email,\n        address: address,\n        latlng: latlng,\n        notes: notes\n      };\n      let arr = [];\n      console.log(obj);\n      arr.push(obj);\n      setTableState(arr);\n    });\n  };\n  return (\n    <div style={{ maxWidth: \"100%\" }}>\n      <MaterialTable\n        isLoading={tableState}\n        editable={{\n          isEditable: rowData => rowData.state === \"MD\", // only name(a) rows would be editable\n          isDeletable: false,\n          //   isDeletable: rowData => rowData.name === \"b\", // only name(a) rows would be deletable\n          onRowAdd: newData => {\n            // console.log(newData);\n            // new Promise((resolve, reject) => {\n            //   setTimeout(() => {\n            //     {\n            //       /* const data = this.state.data;\n            //                 data.push(newData);\n            //                 this.setState({ data }, () => resolve()); */\n            //       dispatch(\n            //         {\n            //           type: \"ADD_ONE_SITE_INFO_TO_STATE\",\n            //           data: newData\n            //         },\n            //         () => resolve()\n            //       );\n            //     }\n            //     resolve();\n            //   }, 1000);\n            // });\n          }\n\n          //   onRowUpdate: (newData, oldData) =>\n          //     new Promise((resolve, reject) => {\n          //       setTimeout(() => {\n          //         {\n          //           /* const data = this.state.data;\n          //                     const index = data.indexOf(oldData);\n          //                     data[index] = newData;\n          //                     this.setState({ data }, () => resolve()); */\n          //         }\n          //         resolve();\n          //       }, 1000);\n          //     }),\n          //   onRowDelete: oldData =>\n          //     new Promise((resolve, reject) => {\n          //       setTimeout(() => {\n          //         {\n          //           /* let data = this.state.data;\n          //                     const index = data.indexOf(oldData);\n          //                     data.splice(index, 1);\n          //                     this.setState({ data }, () => resolve()); */\n          //         }\n          //         resolve();\n          //       }, 1000);\n          //     })\n        }}\n        icons={tableIcons}\n        // onRowClick={(evt, selectedRow) => {\n        //   console.log(selectedRow);\n        // }}\n        // onRowSelected={(evt, selectRow) => {\n        //   console.log(selectRow);\n        // }}\n        columns={[\n          { title: \"Code\", field: \"code\" },\n          { title: \"Grower\", field: \"grower\" },\n          { title: \"State\", field: \"state\" },\n          { title: \"County\", field: \"county\" },\n          { title: \"Email\", field: \"email\" },\n          { title: \"Year\", field: \"year\" },\n          //   { title: \"Email\", field: \"birthYear\", type: \"email\" },\n          { title: \"Address\", field: \"address\" },\n          { title: \"Lat, Long\", field: \"latlng\" },\n          { title: \"Notes\", field: \"notes\" }\n          //   {\n          //     title: \"Doğum Yeri\",\n          //     field: \"birthCity\",\n          //     lookup: { 34: \"İstanbul\", 63: \"Şanlıurfa\" }\n          //   }\n        ]}\n        // data={state.site_information.length !== 0 ? state.site_information : {}}\n        data={state.site_information}\n        title=\"Data Table\"\n        options={{\n          exportButton: true,\n          //   defaultExpanded: true,\n          exportFileName: \"Site Information\",\n          addRowPosition: \"last\",\n          exportAllData: true,\n          pageSize: 10,\n          pageSizeOptions: [5, 10, 20, 50, 100],\n          groupRowSeparator: \"  \",\n          grouping: true\n        }}\n      />\n      {/* )} */}\n    </div>\n  );\n};\n\nexport default TableComponent;\n","import React, { Fragment } from \"react\";\nimport {\n  Card,\n  makeStyles,\n  CardHeader,\n  Avatar,\n  CardActions,\n  Button,\n  CardContent,\n  Typography\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  card: {\n    minWidth: 275,\n    maxWidth: 300\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\"\n  },\n  title: {\n    fontSize: 14\n  },\n  pos: {\n    marginBottom: 12\n  }\n});\n\nconst RepositoriesComponent = props => {\n  const repos = props.data;\n  console.log(repos);\n\n  return (\n    <div className=\"repoRow\">\n      {repos.map((repo, index) => (\n        <CardBuilder key={index} data={repo} />\n      ))}\n    </div>\n  );\n};\n\nconst CardBuilder = props => {\n  const repo = props.data;\n  const classes = useStyles();\n  return (\n    <Card key={repo.id} className=\"repo\">\n      <CardHeader\n        avatar={\n          <Avatar\n            variant=\"square\"\n            src={repo.owner.avatar_url}\n            alt={repo.owner.login}\n          />\n        }\n        title={repo.name}\n      />\n      <CardContent>\n        <Typography>Open Issues: {repo.open_issues_count}</Typography>\n      </CardContent>\n      <CardActions>\n        <Button\n          type=\"button\"\n          size=\"small\"\n          href={repo.url}\n          target=\"_blank\"\n          title=\"Check it on github\"\n        >\n          View\n        </Button>\n      </CardActions>\n    </Card>\n  );\n};\n\nexport default RepositoriesComponent;\n","import React, { Fragment } from \"react\";\nimport { Context } from \"../Store/Store\";\nimport \"./Issues.scss\";\nimport Axios from \"axios\";\nimport Loading from \"react-loading\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport RepositoriesComponent from \"./Repositories\";\n\nconst getAllRepoNames = async url => {\n  let data = await Axios.get(url)\n    .then(response => {\n      //   console.log(response);\n      return response.data;\n    })\n    .then(response => {\n      let dataObject = {};\n      if (response.length > 0)\n        dataObject = {\n          success: true,\n          data: response\n        };\n      else\n        dataObject = {\n          success: false,\n          data: response\n        };\n\n      return dataObject;\n    })\n    .then(bl => {\n      if (bl.success) {\n        Promise.resolve(\"no error\");\n        return bl.data;\n      } else {\n        Promise.reject(\"error\");\n        return false;\n      }\n    });\n\n  return data;\n};\n\nexport const ReposComponent = () => {\n  const [state, dispatch] = React.useContext(Context);\n  const allReposAPIURL =\n    \"https://api.github.com/orgs/precision-sustainable-ag/repos\";\n\n  React.useEffect(() => {\n    let fetchRepos = getAllRepoNames(allReposAPIURL);\n    fetchRepos.then(data => {\n      dispatch({\n        type: \"UPDATE_ALL_REPOS\",\n        data: data\n      });\n    });\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <div className=\"issuesWrapper\">\n      {state.repositories.length === 0 ? (\n        <div className=\"loaderRow\">\n          <Loading type=\"cubes\" color=\"#3f51b5\" width=\"400px\" height=\"400px\" />\n        </div>\n      ) : (\n        <RepositoriesComponent data={state.repositories} />\n      )}\n    </div>\n  );\n};\n\nexport default ReposComponent;\n","import React, { Fragment, useState, useEffect } from \"react\";\nimport { red, grey, green } from \"@material-ui/core/colors\";\nimport { NavLink, Redirect } from \"react-router-dom\";\nimport { CardActionArea } from \"@material-ui/core\";\nimport moment from \"moment-timezone\";\n\nconst deadDeviceBG = red[300];\n// const deadDeviceCol = red[50];\nconst deadDeviceCol = \"#360000 !important\";\nconst activeDeviceBG = green[100];\n// const activeDeviceCol = green[50];\nconst activeDeviceCol = \"#114C2A !important\";\n\nconst DataParser = props => {\n  const [deviceId, setDeviceId] = useState(0);\n  const [shouldRedirect, setShouldRedirect] = useState(false);\n\n  const setDeviceState = deviceId => {\n    setDeviceId(deviceId);\n    setShouldRedirect(true);\n  };\n\n  let device = props.deviceData;\n\n  let dateStatus = \"\";\n  let deviceDateStr = \"\";\n  let today = false;\n  if (device.lastsession) {\n    let deviceSessionBegin = device.links.cellular[0].last_connect_time;\n    let deviceDateFormatted = moment\n      .tz(deviceSessionBegin, \"Africa/Abidjan\")\n      .tz(\"America/New_York\")\n      .format(\"MM/DD/YYYY hh:mm A\");\n\n    deviceDateStr = deviceDateFormatted.toString();\n    let deviceDay = moment\n      .tz(deviceSessionBegin, \"Africa/Abidjan\")\n      .tz(\"America/New_York\")\n      .date();\n\n    let deviceMonth =\n      moment\n        .tz(deviceSessionBegin, \"Africa/Abidjan\")\n        .tz(\"America/New_York\")\n        .month() + 1;\n\n    let deviceYear = moment\n      .tz(deviceSessionBegin, \"Africa/Abidjan\")\n      .tz(\"America/New_York\")\n      .year();\n\n    let now = moment();\n    let todayDay = now.date();\n    let todayMonth = now.month() + 1;\n    let todayYear = now.year();\n\n    if (todayYear === deviceYear && todayMonth === deviceMonth) {\n      // active this month\n      if (todayDay === deviceDay) {\n        // active today\n        dateStatus = \"Active Today\";\n        today = true;\n      } else {\n        dateStatus = \"Active this month\";\n      }\n    } else {\n      // not active this month\n      dateStatus = \"Not active this month\";\n    }\n  }\n\n  return shouldRedirect ? (\n    <Redirect\n      to={{\n        pathname: `/devices/${deviceId}`,\n        state: device\n      }}\n    />\n  ) : (\n    <CardActionArea\n      className={\n        !device.lastsession\n          ? \"deviceActionArea deadDevice\"\n          : \"deviceActionArea aliveDevice\"\n      }\n      style={{\n        backgroundColor: device.lastsession\n          ? today\n            ? activeDeviceBG\n            : \"\"\n          : deadDeviceBG,\n        color: device.lastsession\n          ? today\n            ? activeDeviceCol\n            : \"\"\n          : deadDeviceCol\n      }}\n      disabled={!device.lastsession ? true : false}\n      onClick={() => {\n        setDeviceState(device.id);\n      }}\n    >\n      <p style={{ fontWeight: \"bold\" }}>{device.name}</p>\n      {device.lastsession ? (\n        <Fragment>\n          <p>Last Session: {deviceDateStr}</p>\n          <p style={{ fontWeight: \"bold\" }}>{dateStatus}</p>\n        </Fragment>\n      ) : (\n        <Fragment>\n          <p style={{ fontWeight: \"bold\" }}>Last Session: Not Available</p>\n          <p style={{ fontWeight: \"bold\" }}>Device Dead</p>\n        </Fragment>\n      )}\n    </CardActionArea>\n  );\n};\n\nexport default DataParser;\n","import isIP from \"is-ip\";\n\nexport const APIURL = () => {\n  let mockServerURL =\n    \"https://private-anon-3185b3b9ae-hologram.apiary-proxy.com\";\n  let productionServerURL = \"https://dashboard.hologram.io\";\n  let finalAPIURL = mockServerURL;\n\n  console.log(\"env: \", process.env.NODE_ENV);\n  // if (\n  //   !process.env.NODE_ENV ||\n  //   process.env.NODE_ENV === \"development\" ||\n  //   isIP.v4(process.env.NODE_ENV) ||\n  //   isIP.v4(window.location.hostname)\n  // ) {\n  //   // dev code\n  //   finalAPIURL = mockServerURL;\n  //   console.log(\"RUNNING ON MOCK SERVER\", window.location.hostname);\n  // } else {\n  //   // production code\n  //   finalAPIURL = productionServerURL;\n  //   console.log(\"RUNNING ON LIVE SERVER\", window.location.hostname);\n  // }\n  return finalAPIURL;\n};\n\nexport const APICreds = () => {\n  const authKey = \"apikey:8Lcx29Nrqf6LqcWjqhYI9w4EHPHnCZ\";\n  let authBase64 = btoa(authKey);\n  let options = {\n    responseType: \"json\",\n    headers: {\n      Authorization: `Basic ${authBase64}`\n    }\n  };\n  return options;\n};\n","import React, { useContext, useState, useEffect, Fragment } from \"react\";\nimport { Context } from \"../Store/Store\";\nimport Axios from \"axios\";\nimport Loading from \"react-loading\";\nimport \"./Devices.scss\";\nimport { Card, CardActionArea } from \"@material-ui/core\";\nimport DataParser from \"./DataParser\";\nimport * as Constants from \"./hologramConstants\";\n\n// import red from \"@material-ui/core/colors/red\";\n\nconst DevicesComponent = () => {\n  const [state, dispatch] = useContext(Context);\n  const [devicesLoadingState, setDevicesLoadingState] = useState(true);\n\n  //   const dateTime = new Date().toDateString();\n\n  //   let mockServerURL = \"https://private-anon-3185b3b9ae-hologram.apiary-mock.com\";\n  let devicesData = [];\n  let finalAPIURL = \"\";\n  useEffect(() => {\n    console.log(\"hello from devices\");\n    // let interval = setInterval(\n    finalAPIURL = Constants.APIURL();\n    console.log(finalAPIURL);\n    fetchRecords(`${finalAPIURL}/api/1/devices?withlocation=true`).then(() => {\n      setDevicesLoadingState(false);\n      console.log(\n        \"This is just intended to retrieve basic info, rest of the data should technically come from websockets\"\n      );\n    });\n    //   30 * 1000\n    // );\n    // return () => clearInterval(interval);\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const fetchRecords = async apiURL => {\n    let options = Constants.APICreds();\n\n    await apiCall(apiURL, options);\n  };\n\n  const apiCall = async (url, options) => {\n    await Axios.get(url, options)\n      .then(response => {\n        // save whatever we get\n        devicesData.push(response.data.data);\n\n        return response;\n      })\n      .then(async response => {\n        if (response.data.continues) {\n          // recursive call to get more data\n          await apiCall(`${finalAPIURL}${response.data.links.next}`, options);\n        } else {\n          let devicesFlatData = [];\n          devicesFlatData = devicesData.flat();\n          devicesFlatData = devicesFlatData.sort(compare);\n          dispatch({\n            type: \"SET_DEVICES_INFO\",\n            data: devicesFlatData\n          });\n        }\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  };\n  const compare = (a, b) => {\n    // Use toUpperCase() to ignore character casing\n    let bandA = a.name.toUpperCase();\n    let bandB = b.name.toUpperCase();\n\n    let comparison = 0;\n    if (bandA > bandB) {\n      comparison = 1;\n    } else if (bandA < bandB) {\n      comparison = -1;\n    }\n    return comparison;\n  };\n  return (\n    <div className=\"devicesWrapper\">\n      <div className=\"devicesListWrapper\">\n        {devicesLoadingState ? (\n          <Loading type=\"cubes\" width=\"500px\" height=\"500px\" color=\"#3f51b5\" />\n        ) : (\n          <div className=\"devices\">\n            {state.devices.map((device, index) => (\n              <div className=\"device\" key={device.id}>\n                <Card\n                  variant=\"elevation\"\n                  elevation={3}\n                  className=\"deviceDataWrapper\"\n                >\n                  <DataParser deviceData={device} />\n                </Card>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default DevicesComponent;\n","import React, { useState, useEffect, Fragment } from \"react\";\nimport { APIURL, APICreds } from \"./hologramConstants\";\nimport Axios from \"axios\";\n\nimport { Map, TileLayer, Marker, Popup } from \"react-leaflet\";\n// import Loading from \"react-loading\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport \"leaflet/dist/leaflet.css\";\nimport L from \"leaflet\";\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  IconButton,\n  GridList,\n  GridListTile,\n  GridListTileBar,\n  makeStyles,\n  ListItem,\n  ListItemIcon,\n  List,\n  ListItemText,\n  Chip\n} from \"@material-ui/core\";\nimport {\n  Create,\n  SimCard,\n  Phone,\n  Business,\n  Category,\n  SimCardTwoTone,\n  NetworkCell,\n  Router,\n  SignalCellularConnectedNoInternet0Bar,\n  FastForward,\n  Label,\n  ArrowBackIosOutlined\n} from \"@material-ui/icons\";\nimport moment from \"moment-timezone\";\nimport { Link } from \"react-router-dom\";\n\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require(\"leaflet/dist/images/marker-icon-2x.png\"),\n  iconUrl: require(\"leaflet/dist/images/marker-icon.png\"),\n  shadowUrl: require(\"leaflet/dist/images/marker-shadow.png\")\n});\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-around\",\n    overflow: \"hidden\",\n    backgroundColor: theme.palette.background.paper\n  },\n  gridList: {\n    width: \"100%\",\n    height: 300,\n    // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n    transform: \"translateZ(0)\"\n  },\n  titleBar: {\n    background:\n      \"linear-gradient(to bottom, rgba(0,0,0,0.7) 0%, \" +\n      \"rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)\"\n  },\n  icon: {\n    color: \"white\"\n  }\n}));\nconst DeviceComponent = props => {\n  const classes = useStyles();\n  console.log(props.location.state);\n  const [deviceData, setDeviceData] = useState({ name: \"\" });\n  const [latLng, setLatLng] = useState({ flag: false, data: {} });\n  const [mostRecentData, setMostRecentData] = useState({});\n  useEffect(() => {\n    if (props.location.state === undefined) {\n      console.log(\"undefined !\");\n      // get data from api\n      setDeviceData({ name: \"Loading\" });\n      Axios.get(\n        `${APIURL()}/api/1/devices/${\n          props.match.params.deviceId\n        }/?withlocation=true`,\n        APICreds()\n      ).then(response => {\n        if (response.data.success) {\n          setDeviceData(response.data.data);\n          setLatLng({\n            flag: true,\n            data: [\n              response.data.data.lastsession.latitude,\n              response.data.data.lastsession.longitude\n            ]\n          });\n        } else {\n        }\n      });\n    } else {\n      // data passed from component\n      setDeviceData(props.location.state);\n      Axios.get(\n        `${APIURL()}/api/1/csr/rdm?deviceid=${props.location.state.id}`,\n        APICreds()\n      )\n        .then(response => {\n          console.log(\"most recent data\", response);\n          setMostRecentData(response.data.data[0]);\n        })\n        .then(() => {\n          setLatLng({\n            flag: true,\n            data: [\n              props.location.state.lastsession.latitude,\n              props.location.state.lastsession.longitude\n            ]\n          });\n        });\n    }\n  }, []);\n  const renderCard = () => {\n    return (\n      <Card>\n        <CardHeader\n          title={deviceData.name}\n          subheader={`Device ID: ${deviceData.id}`}\n          action={\n            <Link to=\"/devices\">\n              <IconButton aria-label=\"options\">\n                <ArrowBackIosOutlined />\n              </IconButton>\n            </Link>\n          }\n        />\n\n        <CardContent>\n          <Map center={latLng.data} style={{ height: \"300px\" }} zoom={13}>\n            <TileLayer\n              attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n              url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            />\n            <Marker position={latLng.data}>\n              <Popup>Last Active Location</Popup>\n            </Marker>\n          </Map>\n          <div className=\"belowMapContent\"></div>\n        </CardContent>\n      </Card>\n    );\n  };\n\n  const renderGridListMap = () => {\n    return (\n      <GridList cellHeight={600} spacing={1} className={classes.gridList}>\n        <GridListTile key={deviceData.id} style={{ width: \"100%\" }}>\n          <Map\n            center={latLng.data}\n            style={{ height: \"300px\" }}\n            zoom={13}\n            zoomControl={false}\n          >\n            <TileLayer\n              attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n              url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            />\n            <Marker position={latLng.data}>\n              <Popup>Last Active Location</Popup>\n            </Marker>\n          </Map>\n          <GridListTileBar\n            title={deviceData.name}\n            style={{\n              zIndex: \"999\"\n            }}\n            titlePosition=\"top\"\n            actionIcon={\n              <Link to=\"/devices\">\n                <IconButton\n                  aria-label={`All Devices`}\n                  tooltip=\"All Devices\"\n                  className={classes.icon}\n                  to=\"/devices\"\n                >\n                  <ArrowBackIosOutlined />\n                </IconButton>\n              </Link>\n            }\n            actionPosition=\"left\"\n            className={classes.titleBar}\n          />\n        </GridListTile>\n      </GridList>\n    );\n  };\n  const renderJSON = () => {\n    let jdata = JSON.parse(mostRecentData.data);\n    jdata = jdata.data;\n    let part1 = jdata.substring(0, 100);\n    let part2 = jdata.substring(100);\n    jdata = atob(jdata);\n    return (\n      <span style={{ whiteSpace: \"pre-wrap\", wordWrap: \"break-word\" }}>\n        {jdata}\n        {/* <br />\n        {part2} */}\n      </span>\n    );\n  };\n  const renderTimestamp = () => {\n    let jdata = JSON.parse(mostRecentData.data);\n    console.log(jdata);\n    let ts = jdata.timestamp;\n    return <span>{ts}</span>;\n  };\n\n  const renderErrorCode = () => {\n    let jdata = JSON.parse(mostRecentData.data);\n    let ecd = jdata.errorcode;\n    return <span>{ecd}</span>;\n  };\n\n  const renderTags = () => {\n    let allData = JSON.parse(mostRecentData.data);\n    let chips = [];\n    chips = allData.tags;\n\n    return chips.map((chip, index) => (\n      <Chip\n        key={`chip${index}`}\n        style={{ marginRight: \"1em\", marginBottom: \"1em\" }}\n        label={chip}\n      />\n    ));\n  };\n\n  const renderGridListData = () => {\n    return (\n      <Fragment key=\"griddata\">\n        <GridList\n          cols={3}\n          style={{\n            flexWrap: \"nowrap\",\n            transform: \"translateZ(0)\",\n            height: \"auto\"\n          }}\n        >\n          <GridListTile style={{ height: \"auto\" }}>\n            <Card>\n              {/* <CardHeader title=\"General Info\"></CardHeader> */}\n              <CardContent>\n                <List>\n                  <ListItem alignItems=\"flex-start\" key=\"created\">\n                    <ListItemIcon>\n                      <Create />\n                    </ListItemIcon>\n                    <ListItemText\n                      primary={\"Created\"}\n                      secondary={deviceData.whencreated}\n                    />\n                  </ListItem>\n\n                  {/* <Divider /> */}\n\n                  <ListItem alignItems=\"flex-start\" key=\"imei\">\n                    <ListItemIcon>\n                      <SimCard />\n                    </ListItemIcon>\n                    <ListItemText\n                      primary={\"IMEI\"}\n                      secondary={deviceData.imei}\n                    />\n                  </ListItem>\n                  {/* <Divider /> */}\n                  <ListItem alignItems=\"flex-start\" key=\"phone\">\n                    <ListItemIcon>\n                      <Phone />\n                    </ListItemIcon>\n                    <ListItemText\n                      primary={\"Phone Number\"}\n                      secondary={\n                        deviceData.phonenumber ? deviceData.phonenumber : \"None\"\n                      }\n                    />\n                  </ListItem>\n                </List>\n              </CardContent>\n            </Card>\n          </GridListTile>\n          <GridListTile style={{ height: \"auto\" }}>\n            <Card>\n              {/* <CardHeader title=\"General Info\"></CardHeader> */}\n              <CardContent>\n                <List>\n                  <ListItem alignItems=\"flex-start\" key=\"orgid\">\n                    <ListItemIcon>\n                      <Business />\n                    </ListItemIcon>\n                    <ListItemText\n                      primary={\"ORG ID\"}\n                      secondary={deviceData.orgid}\n                    />\n                  </ListItem>\n                  <ListItem alignItems=\"flex-start\" key=\"imeisv\">\n                    <ListItemIcon>\n                      <SimCardTwoTone />\n                    </ListItemIcon>\n                    <ListItemText\n                      primary={\"IMEI SV\"}\n                      secondary={deviceData.imei_sv}\n                    />\n                  </ListItem>\n                  <ListItem alignItems=\"flex-start\" key=\"type\">\n                    <ListItemIcon>\n                      <Category />\n                    </ListItemIcon>\n                    <ListItemText\n                      primary={\"Type\"}\n                      secondary={deviceData.type}\n                    />\n                  </ListItem>\n                </List>\n              </CardContent>\n            </Card>\n          </GridListTile>\n          <GridListTile style={{ height: \"auto\" }}>\n            <Card>\n              {/* <CardHeader title=\"General Info\"></CardHeader> */}\n              <CardContent>\n                <List>\n                  <ListItem alignItems=\"flex-start\" key=\"network\">\n                    <ListItemIcon>\n                      <NetworkCell />\n                    </ListItemIcon>\n                    <ListItemText\n                      primary={\"Network\"}\n                      secondary={deviceData.links.cellular[0].last_network_used}\n                    />\n                  </ListItem>\n                  <ListItem alignItems=\"flex-start\" key=\"lastconnect\">\n                    <ListItemIcon>\n                      <Router />\n                    </ListItemIcon>\n                    <ListItemText\n                      primary={\"Last Connection\"}\n                      secondary={moment\n                        .tz(\n                          deviceData.links.cellular[0].last_connect_time,\n                          \"UTC\"\n                        )\n                        .tz(\"America/New_York\")\n                        .format(\"MM/DD/YYYY hh:mm A\")\n                        .toString()}\n                    />\n                  </ListItem>\n                  <ListItem alignItems=\"flex-start\" key=\"expires\">\n                    <ListItemIcon>\n                      <SignalCellularConnectedNoInternet0Bar />\n                    </ListItemIcon>\n                    <ListItemText\n                      primary={\"Expires\"}\n                      secondary={moment\n                        .tz(deviceData.links.cellular[0].whenexpires, \"UTC\")\n                        .tz(\"America/New_York\")\n                        .format(\"MM/DD/YYYY\")\n                        .toString()}\n                    />\n                  </ListItem>\n                </List>\n              </CardContent>\n            </Card>\n          </GridListTile>\n        </GridList>\n        <GridList row={1}>\n          <GridListTile style={{ height: \"auto\", width: \"100%\" }}>\n            <Card>\n              <CardHeader title=\"Most Recent Connection\"></CardHeader>\n              <CardContent>\n                <List>\n                  <ListItem alignItems=\"flex-start\" key={\"data\"}>\n                    <ListItemIcon>\n                      <FastForward />\n                    </ListItemIcon>\n                    <ListItemText primary={\"Data\"} secondary={renderJSON()} />\n                  </ListItem>\n\n                  <ListItem alignItems=\"flex-start\" key=\"timestamp\">\n                    <ListItemIcon>\n                      <FastForward />\n                    </ListItemIcon>\n                    <ListItemText\n                      primary={\"Timestamp\"}\n                      secondary={renderTimestamp()}\n                    />\n                  </ListItem>\n                  <ListItem alignItems=\"flex-start\" key=\"errorcode\">\n                    <ListItemIcon>\n                      <FastForward />\n                    </ListItemIcon>\n                    <ListItemText\n                      primary={\"Error Code\"}\n                      secondary={renderErrorCode()}\n                    />\n                  </ListItem>\n                </List>\n              </CardContent>\n            </Card>\n          </GridListTile>\n        </GridList>\n        <GridList row={1}>\n          <GridListTile style={{ height: \"auto\", width: \"100%\" }}>\n            <Card>\n              <CardHeader title=\"Tags\" />\n              <CardContent>\n                <List>\n                  <ListItem alignItems=\"flex-start\" key=\"tags\">\n                    <ListItemIcon>\n                      <Label />\n                    </ListItemIcon>\n                    <ListItemText primary={renderTags()} title={\"Tags\"} />\n                  </ListItem>\n                </List>\n              </CardContent>\n            </Card>\n          </GridListTile>\n        </GridList>\n      </Fragment>\n    );\n  };\n  return latLng.flag ? (\n    <div>\n      {renderGridListMap()}\n      {renderGridListData()}\n    </div>\n  ) : (\n    // <Loading width=\"500px\" height=\"500px\" type=\"cubes\" />\n    <Skeleton variant=\"rect\" width=\"100%\" height=\"300px\" animation=\"wave\" />\n  );\n};\n\nexport default DeviceComponent;\n","import Axios from 'axios';\n\n\nconst getAllKoboAssets = async(who) => {\n\nswitch(who) {\n    case 'psa' : return await Axios.get('http://13.72.51.225/api/kobo.php?get=assets&for=psa');\n    case 'psassg' : return await Axios.get('http://13.72.51.225/api/kobo.php?get=assets&for=psassg');\n}\n  \n\n   \n    \n};\n\n\n\nexport default getAllKoboAssets;","import React from 'react'\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport \"./FormsSkeletonWrapper.scss\";\n\nconst FormsLoadingSkeleton = () => {\n\n    return(\n        <div className=\"skeletonWrapper\">\n        <Skeleton variant=\"rect\" height=\"200px\" width=\"200px\" />\n        <Skeleton variant=\"rect\" height=\"200px\" width=\"200px\" />\n        <Skeleton variant=\"rect\" height=\"200px\" width=\"200px\" />\n        <Skeleton variant=\"rect\" height=\"200px\" width=\"200px\" />\n        <Skeleton variant=\"rect\" height=\"200px\" width=\"200px\" />\n        <Skeleton variant=\"rect\" height=\"200px\" width=\"200px\" />\n        <Skeleton variant=\"rect\" height=\"200px\" width=\"200px\" />\n        </div>\n    );\n\n};\n\nexport default FormsLoadingSkeleton;","import React, {useEffect, useState, useContext} from 'react'\nimport  getAllKoboAssets from './KoboFormAuth';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport FormsLoadingSkeleton from './FormsLoadingSkeleton';\nimport { Context } from '../Store/Store';\nimport { Typography, makeStyles, Card, CardContent } from '@material-ui/core';\nimport \"./Forms.scss\";\nconst useStyles = makeStyles({\n    card: {\n      maxWidth: 400,\n      width: 300\n    },\n    bullet: {\n      display: 'inline-block',\n      margin: '0 2px',\n      transform: 'scale(0.8)',\n    },\n    title: {\n      fontSize: 14,\n    },\n    pos: {\n      marginBottom: 12,\n    },\n  });\n\nconst Forms = () => {\nconst classes = useStyles();\n\nconst [isPSALoading, setIsPSALoading] = useState(true);\nconst [isPSASSGLoading, setIsPSASSGLoading] = useState(true);\n\nconst [state, dispatch] = useContext(Context);\n\n    useEffect(() => {\n        \n        console.log(\"hello from forms\");\n\n         getAllKoboAssets('psa').then((response) => {\n            setIsPSALoading(false);\n            // console.log(data);\n\n            dispatch({\n                type: \"SET_PSA_FORMS\",\n                data: response.data.results\n            });\n        }).then(async () => {\n           await getAllKoboAssets('psassg').then((response) => {\n                setIsPSASSGLoading(false);\n                dispatch({\n                    type: \"SET_PSASSG_FORMS\",\n                    data: response.data.results\n                });\n            })\n        })\n  \n      }, []); \n\n    return(\n        <div className=\"koboFormsWrapper\">\n           \n           <Typography variant=\"h5\" className=\"mb-2\">PSA Forms</Typography>\n           {isPSALoading \n           ? <FormsLoadingSkeleton /> \n           : state.psaForms.length !== 0 \n            ? (\n              <div className=\"koboForms\">\n                  {state.psaForms.map((form, index) => (\n                      form.name !== '' && form.deployment__active ?\n                                         <Card className={classes.card} variant=\"outlined\" key={index}>\n                                         <CardContent>\n                                             <Typography variant=\"body1\">\n                                                {form.name}\n                                             </Typography>\n                                             <Typography variant=\"body2\">\n                                                 Total Submission Count: {form.deployment__submission_count}\n                                             </Typography>\n                                         </CardContent>\n                                     </Card> : ''\n                  ))}\n\n              </div>\n            ) \n            : ''\n            }\n                <Typography variant=\"h5\" className=\"mt-2\">Social Science Group Forms</Typography>\n                {isPSASSGLoading \n           ? <FormsLoadingSkeleton /> \n           : state.psassgForms.length !== 0 \n            ? (\n              <div className=\"koboForms\">\n                  {state.psassgForms.map((form, index) => (\n                      form.name !== '' && form.deployment__active ?\n                                         <Card className={classes.card} variant=\"outlined\" key={index}>\n                                         <CardContent>\n                                             <Typography variant=\"body1\">\n                                                {form.name}\n                                             </Typography>\n                                             <Typography variant=\"body2\">\n                                                 Total Submission Count: {form.deployment__submission_count}\n                                             </Typography>\n                                         </CardContent>\n                                     </Card> : ''\n                  ))}\n\n              </div>\n            ) \n            : ''\n            }\n            </div>\n        \n    );\n\n};\n\nexport default Forms;","import React, { useContext } from \"react\";\nimport { Context } from \"../Store/Store\";\nimport {\n  Paper,\n  Typography,\n  Grid,\n  Card,\n  CardActionArea\n} from \"@material-ui/core\";\n\nconst LandingComponent = () => {\n  const [state, dispatch] = useContext(Context);\n\n  return (\n    <div>\n      <Typography variant=\"h5\" align=\"center\" gutterBottom>\n        Welcome to Precision Sustainable Agriculture Tech Dashboard\n      </Typography>\n      <Grid container>\n        <Grid item>\n          <Paper>\n            <Card>\n              <CardActionArea>\n                <Typography>Card 1</Typography>\n              </CardActionArea>\n            </Card>\n          </Paper>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default LandingComponent;\n","import React, { useEffect } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { useAuth0 } from \"../Auth/react-auth0-spa\";\n\nconst PrivateRoute = ({ component: Component, path, ...rest }) => {\n  const { loading, isAuthenticated, loginWithRedirect } = useAuth0();\n\n  useEffect(() => {\n    if (loading || isAuthenticated) {\n      return;\n    }\n    const fn = async () => {\n      await loginWithRedirect({\n        appState: { targetUrl: path }\n      });\n    };\n    fn();\n  }, [loading, isAuthenticated, loginWithRedirect, path]);\n\n  const render = props =>\n    isAuthenticated === true ? <Component {...props} /> : null;\n\n  return <Route path={path} render={render} {...rest} />;\n};\n\nexport default PrivateRoute;","import React, { Fragment, useState, useEffect } from \"react\";\n\nimport \"./Styles/App.css\";\n\nimport Header from \"./Header/Header\";\n\nimport {\n  makeStyles,\n  Box,\n  MuiThemeProvider,\n  createMuiTheme,\n  CssBaseline,\n  ThemeProvider,\n  Paper,\n  Typography\n} from \"@material-ui/core\";\nimport TableComponent from \"./Table/Table\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { ReposComponent } from \"./Issues/Issues\";\nimport DevicesComponent from \"./Devices/Devices\";\nimport DeviceComponent from \"./Devices/Device\";\nimport Forms from \"./Forms/Forms\";\nimport LandingComponent from \"./Landing/Landing\";\n// import Login from \"./Auth/Login/Login\";\n\nimport { useAuth0 } from \"./Auth/react-auth0-spa\";\nimport Loading from \"react-loading\";\nimport PrivateRoute from \"./utils/private-routes\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\n\nconst drawerWidth = 240;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\"\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3)\n  },\n  toolbar: theme.mixins.toolbar\n}));\n\nfunction App() {\n  const { loading } = useAuth0();\n  const classes = useStyles();\n\n  const [theme, setTheme] = useState({\n    palette: {\n      primary: { main: \"#2e7d32\" },\n      secondary: { main: \"#4d4d4d\" },\n      type: \"light\"\n    },\n    typography: {\n      useNextVariants: true,\n      fontFamily: \"'Nunito', sans-serif\"\n    }\n  });\n  const [loggedIn, setLoggedIn] = useState(false);\n  const muiTheme = createMuiTheme(theme);\n\n  const toggleThemeDarkness = () => {\n    let newPaletteType = theme.palette.type === \"light\" ? \"dark\" : \"light\";\n    setTheme({\n      ...theme,\n      palette: {\n        ...theme.palette,\n        type: newPaletteType\n      }\n    });\n  };\n\n  const isDarkTheme = () => {\n    return theme.palette.type === \"light\" ? false : true;\n  };\n\n  return loading ? (\n    <CssBaseline>\n      <ThemeProvider theme={muiTheme}>\n        <Paper\n          style={{\n            height: \"100vh\"\n          }}\n        >\n          <Box height={\"40vh\"} />\n          <Typography variant=\"h3\" gutterBottom align=\"center\">\n            Loading..\n          </Typography>\n        </Paper>\n      </ThemeProvider>\n    </CssBaseline>\n  ) : (\n    // <CssBaseline>\n    <ThemeProvider theme={muiTheme}>\n      <Header\n        isDarkTheme={theme.palette.type === \"light\" ? false : true}\n        setDarkTheme={toggleThemeDarkness}\n      />\n      {/* <DrawerComponent /> */}\n\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        {/* <Paper elevation={0} style={{ minHeight: \"100%\" }}> */}\n        <Switch>\n          {/* <Route path=\"/\" component={Login} exact /> */}\n          <Route\n            render={props => (\n              <LandingComponent\n                {...props}\n                isDarkTheme={theme.palette.type === \"light\" ? false : true}\n              />\n            )}\n            path=\"/\"\n            exact\n          />\n          <PrivateRoute path=\"/table\" component={TableComponent} />\n          <PrivateRoute path=\"/issues\" component={ReposComponent} exact />\n          <PrivateRoute path=\"/devices\" component={DevicesComponent} exact />\n          <PrivateRoute\n            path={`/devices/:deviceId`}\n            component={DeviceComponent}\n          />\n          <PrivateRoute path={`/kobo-forms`} component={Forms} />\n        </Switch>\n        {/* </Paper> */}\n      </main>\n      {/* </Paper> */}\n    </ThemeProvider>\n    // </CssBaseline>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createBrowserHistory } from \"history\";\n\nexport default createBrowserHistory();","import React, { useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./Styles/index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport Store from \"./Store/Store\";\nimport \"typeface-roboto\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport { Auth0Provider } from \"./Auth/react-auth0-spa\";\nimport history from \"./utils/history\";\nimport config from \"./Auth/auth_config.json\";\nimport { CssBaseline } from \"@material-ui/core\";\n\n// a function that routes the user to the right place after login\nconst onRedirectCallback = appState => {\n  history.push(\n    appState && appState.targetUrl\n      ? appState.targetUrl\n      : window.location.pathname\n  );\n};\n\nReactDOM.render(\n  <Auth0Provider\n    domain={config.domain}\n    client_id={config.clientId}\n    redirect_uri={window.location.origin}\n    onRedirectCallback={onRedirectCallback}\n  >\n    <Store>\n      <BrowserRouter history={history}>\n        <App />\n      </BrowserRouter>\n    </Store>\n  </Auth0Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}